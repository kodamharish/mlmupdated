# Generated by Django 5.1.7 on 2025-07-10 11:20

import django.db.models.deletion
import property.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('amenity_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BookingAmountSlab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('max_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('booking_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PropertyCategory',
            fields=[
                ('property_category_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('property_id', models.AutoField(primary_key=True, serialize=False)),
                ('looking_to', models.CharField(blank=True, choices=[('sell', 'Sell'), ('rent', 'Rent')], max_length=10, null=True)),
                ('property_title', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('pin_code', models.CharField(blank=True, max_length=15, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('plot_area_sqft', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('builtup_area_sqft', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('length_ft', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('breadth_ft', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('number_of_floors', models.PositiveIntegerField(blank=True, null=True)),
                ('floor', models.PositiveIntegerField(blank=True, null=True)),
                ('furnishing_status', models.CharField(blank=True, max_length=100, null=True)),
                ('number_of_open_sides', models.PositiveIntegerField(blank=True, null=True)),
                ('number_of_roads', models.PositiveIntegerField(blank=True, null=True)),
                ('number_of_bedrooms', models.PositiveIntegerField(blank=True, null=True)),
                ('number_of_balconies', models.PositiveIntegerField(blank=True, null=True)),
                ('number_of_bathrooms', models.PositiveIntegerField(blank=True, null=True)),
                ('road_width_1_ft', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('road_width_2_ft', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('facing', models.CharField(blank=True, choices=[('east', 'East'), ('west', 'West'), ('north', 'North'), ('south', 'South'), ('north_east', 'North-East'), ('north_west', 'North-West'), ('south_east', 'South-East'), ('south_west', 'South-West')], max_length=20, null=True)),
                ('ownership_type', models.CharField(blank=True, max_length=100, null=True)),
                ('property_value', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=15, null=True)),
                ('total_property_value', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=15, null=True)),
                ('booking_amount', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('property_value_without_booking_amount', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=15, null=True)),
                ('preferred_tenants', models.CharField(blank=True, help_text='e.g., Family, Bachelors, Company Lease', max_length=100, null=True)),
                ('rent_amount', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, null=True)),
                ('deposit_amount', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, null=True)),
                ('available_from', models.CharField(blank=True, max_length=100, null=True)),
                ('property_uniqueness', models.TextField(blank=True, null=True)),
                ('location_advantages', models.TextField(blank=True, null=True)),
                ('other_features', models.TextField(blank=True, null=True)),
                ('owner_name', models.CharField(blank=True, max_length=150, null=True)),
                ('owner_contact', models.CharField(blank=True, max_length=15, null=True)),
                ('owner_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('role', models.CharField(blank=True, max_length=20, null=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('referral_id', models.CharField(blank=True, max_length=200, null=True)),
                ('agent_commission', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=15, null=True)),
                ('agent_commission_paid', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=15, null=True)),
                ('agent_commission_balance', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=15, null=True)),
                ('company_commission', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=15, null=True)),
                ('remaining_company_commission', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total_company_commission_distributed', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('company_commission_status', models.CharField(default='unpaid', max_length=100)),
                ('is_featured', models.BooleanField(default=False)),
                ('status', models.CharField(default='available', max_length=100)),
                ('approval_status', models.CharField(default='pending', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amenities', models.ManyToManyField(blank=True, to='property.amenity')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties_added', to='users.user')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='property.propertycategory')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('visible_to_users', models.ManyToManyField(related_name='notifications_visible_to', to='users.user')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='property.property')),
            ],
        ),
        migrations.CreateModel(
            name='EMIOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_months', models.PositiveIntegerField()),
                ('emi_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emi_options', to='property.property')),
            ],
            options={
                'unique_together': {('property', 'period_months')},
            },
        ),
        migrations.CreateModel(
            name='PropertyFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=property.models.property_file_upload_to)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='property.property')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=property.models.property_image_upload_to)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='property.property')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyType',
            fields=[
                ('property_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='types', to='property.propertycategory')),
            ],
        ),
        migrations.AddField(
            model_name='property',
            name='property_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='property.propertytype'),
        ),
        migrations.CreateModel(
            name='PropertyVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to=property.models.property_video_upload_to)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='property.property')),
            ],
        ),
        migrations.CreateModel(
            name='UserEMI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('emi_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.emioption')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.property')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.user')),
            ],
        ),
        migrations.CreateModel(
            name='UserNotificationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_read', models.BooleanField(default=False)),
                ('marked_at', models.DateTimeField(auto_now=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.notification')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.user')),
            ],
            options={
                'unique_together': {('user', 'notification')},
            },
        ),
    ]
